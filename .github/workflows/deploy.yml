name: 🚀 Auto Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-frontend:
    name: 🎨 Deploy Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: 📥 Install dependencies
        run: |
          cd frontend
          npm ci

      - name: 🔨 Build project
        run: |
          cd frontend
          npm run build

      - name: 🧪 Run tests
        run: |
          cd frontend
          npm run lint || true # Continue even if linting fails

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          production: ${{ github.ref == 'refs/heads/main' }}

  deploy-backend:
    name: ⚙️ Deploy Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: 📥 Install dependencies
        run: |
          cd backend
          npm ci

      - name: 🧪 Run tests
        run: |
          cd backend
          npm test || true # Continue even if tests fail initially

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}
          working-directory: ./backend
          production: ${{ github.ref == 'refs/heads/main' }}

  notify:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always()
    
    steps:
      - name: ✅ Success Notification
        if: needs.deploy-frontend.result == 'success' && needs.deploy-backend.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "✨ Frontend: Deployed"
          echo "⚙️ Backend: Deployed"
          
      - name: ❌ Failure Notification  
        if: failure()
        run: |
          echo "💥 Deployment failed!"
          echo "Check the logs above for details."
